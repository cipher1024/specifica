protocol p {
  interaction i {
    role R {
      handle event rdwr(Key k, BOOLEAN data) {
        whilein {
            view(Replica) !! rd(k = k)
            change cur_k = k, cur_value = data
            await msg rdack from all(Replica) @rd_pending
            await msg x
        } do {
            handle msg rdfailed {
              view(Replica) !! release(k=rdfailed.k)
              // delay for some time, cphase remains rd_pending
              view(Replica) !! rd(k=cur_k) // retry
	      (* an exception message handler can even block - cool! *)
	      await msg someMsg from all(Replica)
            }

            when g handle event foo {
	      change bar = 1
	    }
        }
        view(Replica) !! wr(k=cur_k, data=cur_value)
        change value_read = FALSE 
        await msg wrack from all(Replica) @wr_pending
      }
    }
  }
}
