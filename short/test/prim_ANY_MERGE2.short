protocol prim_ANY_MERGE2 {
  interaction i {
    role R {
      when ga handle msg ma {
        | a -> change x = ma.foo + 1
        | b -> change x = ma.foo + 2
      }

      when gb handle msg mb {
        change y = mb.foo + 2
      }

      when g handle any msg m {
        | m.view # view(S) -> (* view changed, do special things *)
           change z = m.baz + 1
	   break
        | m.view = view(S) -> (* view unchanged *)
	   (* invoke regular handler *)
	   continue (* cont only needed since there's no other instr here *)
                    (* if there was a e.g. CHANGE, cont would be implicit *)
      }

      (* crash handler leads to lifecycle rewrite *)
      (* for role S, which is needed to check the *)
      (* interaction with the ANY handler rewrite *)
      (* to be sure we don't generate a handler   *)
      (* that runs when ~running                  *)
      handle crash S s {
	SHUTDOWN (* triggers generation of 'running' *)
      }
    }

    role S {
    }
  }
}
